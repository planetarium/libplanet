FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build-env
WORKDIR /app

# Copy csproj and restore as distinct layers
# Note that it's ordered by the least frequently changed
COPY ./Libplanet.Stun/Libplanet.Stun.csproj ./Libplanet.Stun/
RUN dotnet restore Libplanet.Stun
COPY ./Libplanet.RocksDBStore/Libplanet.RocksDBStore.csproj ./Libplanet.RocksDBStore/
RUN dotnet restore Libplanet.RocksDBStore
COPY ./Libplanet.Explorer.Executable/Libplanet.Explorer.Executable.csproj ./Libplanet.Explorer.Executable/
RUN dotnet restore Libplanet.Explorer.Executable
COPY ./Libplanet.Explorer/Libplanet.Explorer.csproj ./Libplanet.Explorer/
RUN dotnet restore Libplanet.Explorer
COPY ./Libplanet/Libplanet.csproj ./Libplanet/
RUN dotnet restore Libplanet

# Copy everything else and build
COPY . ./
RUN dotnet publish -c Release -r linux-x64 -o out Libplanet.Explorer.Executable

# Build runtime image
FROM mcr.microsoft.com/dotnet/aspnet:6.0
WORKDIR /app
COPY --from=build-env /app/out .

# Install native deps & utilities for production
RUN apt-get update \
    && apt-get install -y --allow-unauthenticated \
        libc6-dev jq \
     && rm -rf /var/lib/apt/lists/*

# Runtime settings
EXPOSE 5000
VOLUME /data

ENTRYPOINT ["Libplanet.Explorer.Executable"]
