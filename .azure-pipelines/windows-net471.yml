parameters:
  configuration: Debug
  testArguments: -verbose
  testTimeoutInMinutes: 12
  copySQLitePCLRaw: false

steps:

- task: NuGetCommand@2
  displayName: nuget install xunit.runner.console
  inputs:
    command: custom
    arguments: install xunit.runner.console

- task: PowerShell@2
  displayName: Set TargetFramework to net471 by force
  inputs:
    targetType: inline
    script: |
      $projs = (gci *.Tests/*.Tests.csproj) + (gci Libplanet.Benchmarks/*.csproj)
      foreach ($path in $projs) {
        [xml]$csproj = Get-Content $path
        foreach ($pg in $csproj.Project.PropertyGroup) {
          if ($pg.TargetFramework -ne $null) {
            $pg.TargetFramework = "net471"
          }
        }
        $csproj.Save($path)
      }

- task: MSBuild@1
  inputs:
    solution: Libplanet.sln
    msbuildVersion: "16.0"
    configuration: ${{ parameters.configuration }}
    msbuildArguments: /restore /p:SkipSonar=true

- ${{ if eq(parameters.copySQLitePCLRaw, true) }}:
  # https://github.com/sschmid/Entitas-CSharp/issues/811#issuecomment-449182023
  # https://github.com/dotnet/docfx/issues/3389
  - task: CmdLine@2
    displayName: choco install wget
    inputs:
      script: choco install wget --yes
  - task: Bash@3
    inputs:
      targetType: inline
      script: |
        set -vx
        tmpdir="$(mktemp -d)"
        pushd "$tmpdir/"
        wget --trust-server-names \
          https://www.nuget.org/api/v2/package/SQLitePCLRaw.core/2.0.4
        7z x sqlitepclraw.core.*.nupkg
        popd
        for f in *.Tests; do
          path="$(find "$f" \
            -wholename "$f/bin/${{ parameters.configuration }}/net*/"$f".dll")"
          cp -v "$tmpdir"/lib/net*/SQLitePCLRaw.core.dll "$(dirname "$path")"
        done

- task: Bash@3
  displayName: xunit.console.exe *.Tests.dll
  inputs:
    targetType: inline
    script: |
      set -vx
      declare -a assemblies
      for f in *.Tests; do
        path="$(find "$f" \
          -wholename "$f/bin/${{ parameters.configuration }}/net*/"$f".dll")"
        assemblies+=("`pwd`/$path")
      done
      ${{ parameters.testPrefix }} \
        xunit.runner.console.*/tools/net471/xunit.console.exe \
          "${assemblies[@]}" \
          ${{ parameters.testArguments }} \
          -xml "$(Agent.TempDirectory)/xunit.xml"
  env:
    TURN_SERVER_URL: ${{ parameters.turnServerUrl }}
    MONO_THREADS_SUSPEND: preemptive
  timeoutInMinutes: ${{ parameters.testTimeoutInMinutes }}

- task: PublishTestResults@2
  inputs:
    testRunner: XUnit
    testResultsFiles: '$(Agent.TempDirectory)/xunit.xml'
